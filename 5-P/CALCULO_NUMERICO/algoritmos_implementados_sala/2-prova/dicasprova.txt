Resolução de Sistemas Lineares por Métodos Intereativos

    Método de Jacobi
        - Fórmula principal: X(k+1) = inv(D) * (b - M * X(k) ),  k = 0, 1, 2 ,  3 . . .
            M = A - D, ONDE  D = diag(diag(A)).
            Apenas o b varia, sempre tem o b inicial.
        - O passo a passo de Jacobi
            Temos 
            A = [
                1 2 3
                4 5 6
                7 8 9
            ]

            e

            b = [
                3
                5
                7
            ]

            Faz-se

            1*x1 + 2*x2 + 3*x3 = 3
            4*x1 + 5*x2 + 6*x3 = 5
            7*x1 + 8*x2 + 9*x3 = 7

            Depois, isola-se as icognitas.

            x1 = (3 - 2x2 - 3x3) / 1
            x2 = (5 - 4x1 - 6x3) / 5
            x3 = (7 - 7x1 - 8x2) / 9

            Agora, montamos o esquema que irá se repetirr, mudando apenas o b
            M = VALORES DE DA EQUAÇÃO ISOLADA
            M = [
                0 -2 -3
                -4 0 -6
                -7 -8 0
            ]

            b = [
                3 / 1
                5 / 5
                7 / 9
            ]

            x(k) = primeiro K, chute inicial.
            X(k+1) = M * x(k) + b => repete-se varias vezes até a tolerância

            erro = norm(abs(x(k+1) - x(k)), inf ) / norm((x+1), inf)

    Método de Gauss-Seidel
        - Fórmula principal: X(k+1) = inv(L) * (b - U*x(k) ), k =0 , 1, ,2, ...
            ONDE L = tril(A)  triangular inferior
            ONDE U = A - L triangular superior

        - O passo Gauss-Seidel
            1) forma, utilizando exatamente a fórmula, variando apenas x(k)
            e verificando o erro, onde  erro = norm(abs(x(k+1) - x(k)), inf ) / norm( (x+1), inf)

            2) forma
                
                a) entrada
                    A = [
                        2*x1  +  x2
                        3*x1 + 4*x2
                    ]

                    b = [
                        1
                        -1
                    ]

                    x0 = [
                         0
                         0
                         ]

                b) montar equação
                    2*x1 +  x2 = 1 
                    3*x1 + 4*x2 = -1

                c) isolando as incognitas
                    x1 = ( 1 - x2 ) / 2
                    x2 = (-1 - 3*x1) / 4
                
                d) subistituindo x0 nas equações

                    x1 = (1 - 0) / 2
                    x2 = (-1 - 3*0) / 4

                    x1 = 1/2
                    x2 = (-1 3* (1/2) ) / 4
                    x2 = -5/8

                    x(k+1) = [
                        1/2
                        -5/8
                    ]
                    A lógica é usar o chute inicial apenas no x1
                    e depois ir usando o resultados das incognitas
                    nas equações subsequentes.

                    x(1) = norm(abs(x(k+1) - x(k)), inf) /  norm(x(k+1))
                    x(1) <= tolerância

Resolução de Sistemas não-Lineares

    Método de Newton
        - Fórmula principal: 
            j(x(k)) * s(k) = - F(x(k))

            x(k+1) = x(k) + s(k)

        - Passo a passo método de newton

            - entrada
                x^2 - 4*x + 4*y = -8
                x^2 + y^2 = 8

                e
                x(0) = [
                        1,5 
                        3
                        ]

            a) Encontrar F(x)
                    x^2 - 4*x + 4*y + 8
            F(x)   
                    x^2 + y^2 -8

            b) Encontrar matriz jacobiana
                derivada parcial para cada função
                1 linha função 1 a(1, 1)  em relação a x e a(1, 2) em relação a y
                2 linha função 2 a(2, 1)  em relação a x e a(2, 2) em relação a y

                J(X) = [
                    2*X-4   4
                    2*x    2*y
                ]
                
            c) Encontrar F(x(k)) e j(x(k)) para x(0)

                Substituir a matriz x(0) na função F(x)
                F([1,5 -3]^T) = [
                    (1.5)^2 - 4*(1.5) + 4*(3) + 8

                    (1.5)^2 + (3)^2 - 8
                ]

                = [-7.75 3.25]^T

                Substituir a matriz X(0) na J(x)
                J(x(0)) =  [
                    2*(1,5) - 4     4
                    2*(1,5)         2*(3)

                ]

                = [-1   4
                    3  -6]


            d) Encontrar o passo de Newton resolvendo o Sistema

                J(x)* S(0) = -F(x)
                [
                -1   4                  
                3  -6           =  [-7.75 3.25]^T
                    ]

                S(0) = [5.58 3.33]^T

            e) Encontrar X(k+1)
                x(k+1) = x(k) + s(k)
                x(1) = [1.5 3]^T + [5.58 3.33]^T = [7.75 -3.25]^T

            f) Verificar o erro
               error = norm(abs([7.75 -3.25]^T - [1.5 3]^T), inf) 


               repetir c, d, e e f  até atingir a tolerância






Interpolação polinomial

    Método Clássico

        - Método clássico passo a passo

            Entrada:    
                x0 = -1, x1 = 0 e x2 = 3
                y0 = 15, y1 = 8 e y2 =-1
            
            a) Determinar o polinomio que queremos
                No caso, n =2. Porque, quantidade_pontos - 1.

                Logo, temos P(x) = a0 + a1*x + a2*x^2, tal que P(x(k)) = y(k), k = 0, 1 e 2
            
            b) Montar o sistema de equações com o polinomio
                P(x0) = a0 + a1*-1 + a2*(-1)^2 = 15
                P(x1) = a0 + a1*0 + a2*(0)^2 = 8
                P(x2) = a0 + a1*3 + a2*(3)^2 = -1

            c) Montar a matriz
                A = [
                    1 -1 1
                    1  0 0
                    1  3 9 
                ]

                b = [ 15 8 -1]^T

            
            d) Resolver
                A \ b ou triangularizar, isso retornará a matriz de coeficientes
                A \ b = [8 -6 1]^T

                Logo, a0 = 8 , a1 = -6 e a2 = 1
                P(x) = 8  -6*x + 1*x^2




    Método de Lagrange

        - Método de Lagrange passo a passo
            Entrada:
                x0 = -1, x1 = 0 e x2 = 3
                y0 = 15, y1 = 8 e y2 =-1

            a) Determinar o polinomio
                Pn(x) = L0*y0 +   L1*y1 + L2*y2 
            
            b) Calcular o produtorio
                - Dica , para calcular a quantidade de L necessários
                é pegar a quantidade de pontos e subtrair 1.

                - Dica, a lógica é se guiar pelo indice no L. O número do 
                indice não fica em cima e conta a partir do inicio e ele
                fica em baixo, sendo subtraido por todo, a partir do zero.
                L0 = (x - x1)*(x - x2) / (x0 - x1)*(x0 - x2)

                L1 = (x - x0)*(x - x2) / (x1 - x0)*(x1 - x2)

                L2 = (x - x0)*(x - x1) / (x2 - x0)*(x2 - x1)

            c) Agora é voltar para o inicio e calcular tudo.
                Pn(x) = L0*y0 +   L1*y1 + L2*y2 

    

    Método de Newton 
        - Método de Newton passo a passo.
            Entrada:
                 x0 = -1, x1 = 0 e x2 = 3
                y0 = 15, y1 = 8 e y2 =-1

            a) Determinar o polinomio
                Total de ponto menos 1.
                    P2(x) = d0 + d1(x - x0) + d2*(x - x0)*(x - x1)

                    caso n = 3

                P2(x) = d0 + d1(x - x0) + d2*(x - x0)*(x - x1) + d3*(x - x0)*(x - x1)*(x-x2)

            b) Fazer a tabela
                   delta0 
                xi|   yi   | delta1                       | delta2 
                -1|   15 d0| (8 -  15) / (0 - (-1)) d1 a  |  (b - a ) / (x2 - x0) =>  (b - a ) / (3 - (-1))  
                 0|   8    |  (-1  -8 ) / (3 - 0)      b  |
                 3|   -1   |                              |

            c) Resolver
                pegar cada delta e aplicar na equação do passo 1


Ajuste de Curvas

    - Método dos Minimos Quadrados
        - Matriz de Vondmort
            Entrada:
                 x0 = -1, x1 = 0 e x2 = 3
                y0 = 15, y1 = 8 e y2 =-1

            a) criar matrizes
                x = [-1 0 3]^T
                y = [15 8 -1]^T
            
            b) Matriz V
                V = [ones(length(x), 1) x]
                 
                se for uma Curva: V = [ones(length(x)) x x^2]

            c) coeficientes
                a = inv((V*V')) * V'* y

            d) aplicar os coeficientes na equação

            f(x) = a0 + a1*x +  a2*x^2


        -  Por somatório
            a = n* somatório_1_n(xi*yi) -  somatório_1_n(xi)* somatório_1_n(yi) / n *  somatório_1_n(xi^2) -  somatório_1_n(xi)^2
            